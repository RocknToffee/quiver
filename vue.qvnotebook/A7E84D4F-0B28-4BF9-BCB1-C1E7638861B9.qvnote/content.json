{
  "title": "07: Style Binding",
  "cells": [
    {
      "type": "text",
      "data": "<h3>Binding Inline Styles</h3><div><b>Object Syntax:</b></div><div>The object syntax for <code>v-bind:style</code> is pretty \nstraightforward - it looks almost like CSS, except itâ€™s a JavaScript \nobject. You can use either camelCase or kebab-case (use quotes with \nkebab-case) for the CSS property names:<br></div>"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<div v-bind:style=\"{ color: activeColor, fontSize: fontSize + 'px' }\"></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "data: {\n  activeColor: 'red',\n  fontSize: 30\n}"
    },
    {
      "type": "text",
      "data": "<p>It is often a good idea to bind to a style object directly so that the template is cleaner:</p>"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<div v-bind:style=\"styleObject\"></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "data: {\n  styleObject: {\n    color: 'red',\n    fontSize: '13px'\n  }\n}"
    },
    {
      "type": "text",
      "data": "Again, the object syntax is often used in conjunction with computed properties that return objects<div><div></div></div><div><hr><h3>Array Syntax</h3></div><div>The array syntax for <code>v-bind:style</code> allows you to apply multiple style objects to the same element:<br></div>"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<div v-bind:style=\"[baseStyles, overridingStyles]\"></div>"
    },
    {
      "type": "text",
      "data": "<hr><h3>Auto-prefixing</h3><div>When you use a CSS property that requires <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\" target=\"_blank\" rel=\"noopener\">vendor prefixes</a> in <code>v-bind:style</code>, for example <code>transform</code>, Vue will automatically detect and add appropriate prefixes to the applied styles.<br></div><div><hr><h3>Multiple Values</h3></div><div>Starting in 2.3.0+ you can provide an array of multiple (prefixed) values to a style property, for example:<br></div>"
    },
    {
      "type": "code",
      "language": "html",
      "data": "<div v-bind:style=\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\"></div>"
    },
    {
      "type": "text",
      "data": "This will only render the last value in the array which the browser supports. In this example, it will render <code>display: flex</code> for browsers that support the unprefixed version of flexbox."
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}